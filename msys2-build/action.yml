name: msys2-build
description: "Setup MSYS2 (clang64|ucrt64), install packages, run build script"
author: D4RKO
inputs:
  msystem:
    description: "MSYS2 environment (clang64 or ucrt64)"
    required: false
    default: "ucrt64"
  include_mpv_deps:
    description: "Include broad mpv dependencies"
    required: false
    default: "true"
  extra_packages:
    description: "Space-separated additional packages"
    required: false
    default: ""
  working-directory:
    description: "Directory where the build script runs"
    required: false
    default: "."
  build-script:
    description: "Bash script lines to execute under MSYS2 shell"
    required: false
    default: |
      set -euxo pipefail
      clang --version || true
      gcc --version || true
      meson --version || true
      ninja --version || true
runs:
  using: "composite"
  steps:
    - id: compute-packages
      name: Compute packages
      shell: pwsh
      run: |
        $msys = "${{ inputs.msystem }}".ToLower()
        if ($msys -ne "clang64" -and $msys -ne "ucrt64") { throw "invalid msystem" }
        $prefix = if ($msys -eq "clang64") { "mingw-w64-clang-x86_64-" } else { "mingw-w64-ucrt-x86_64-" }

        [string[]]$base = @(
          "${prefix}toolchain",
          "${prefix}python",
          "${prefix}meson",
          "${prefix}ninja",
          "${prefix}pkgconf",
          "${prefix}cmake",
          "git","zip","curl","jq","tar","unzip"
        )

        [string[]]$mpv = @(
          "${prefix}ffmpeg",
          "${prefix}libass",
          "${prefix}libplacebo",
          "${prefix}harfbuzz",
          "${prefix}uchardet",
          "${prefix}zimg",
          "${prefix}lcms2",
          "${prefix}libarchive",
          "${prefix}libbluray",
          "${prefix}libdvdread",
          "${prefix}libdvdnav",
          "${prefix}luajit",
          "${prefix}mujs",
          "${prefix}vulkan-headers",
          "${prefix}vulkan-loader",
          "${prefix}spirv-cross",
          "${prefix}shaderc",
          "${prefix}ntldd",
          "${prefix}nasm",
          "${prefix}yasm"
        )

        $pkgs = @()
        $pkgs += $base
        if ("${{ inputs.include_mpv_deps }}".ToLower() -eq "true") { $pkgs += $mpv }
        $extra = "${{ inputs.extra_packages }}".Trim()
        if ($extra.Length -gt 0) { $pkgs += $extra.Split(" ", [System.StringSplitOptions]::RemoveEmptyEntries) }
        $pkgs = $pkgs | ForEach-Object { "$_" }
        $pkgs = $pkgs | Select-Object -Unique
        $line = ($pkgs -join " ")
        "pkgs=$line" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8

    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ inputs.msystem }}
        update: true
        cache: true
        install: ${{ steps.compute-packages.outputs.pkgs }}

    - name: Run build script
      shell: msys2 {0}
      working-directory: ${{ inputs.working-directory }}
      run: ${{ inputs.build-script }}
